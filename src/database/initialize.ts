import { subWeeks } from 'date-fns';
import { getNextLunchDate } from '../date_utils';
import logger from '../logger';
import { Client } from 'pg';

export async function initialize(client: Client) {
  logger.debug('creating initial tables');
  const ddlResult = await client.query(
    `CREATE TABLE IF NOT EXISTS zulip_user
      ( id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY
      , has_credit_card BOOL NOT NULL
      , email TEXT UNIQUE NOT NULL );

      CREATE TABLE IF NOT EXISTS lunch
      ( day DATE PRIMARY KEY
      , zulip_group_message_id INTEGER UNIQUE );

      CREATE TABLE IF NOT EXISTS attendance
      ( lunch_day DATE REFERENCES lunch(day)
      , zulip_user_id INT REFERENCES zulip_user(id)
      , group_id INT
      , is_captain BOOL NOT NULL
      , PRIMARY KEY (lunch_day, zulip_user_id) );

      CREATE TABLE IF NOT EXISTS most_recent_lunch_pairing_cache
      ( id INT PRIMARY KEY
      , cache JSONB NOT NULL );

      CREATE TABLE IF NOT EXISTS migration
      ( id INT PRIMARY KEY
      , description TEXT NOT NULL );
`,
  );
  logger.silly('initial table creation result', { ddlResult });
  logger.debug('checking if initial migration is set');
  const hasMigration = await client.query(
    'SELECT EXISTS(SELECT 1 FROM migration WHERE id = $1)',
    [0],
  );
  logger.silly('checked for initial migration', { hasMigration });
  if (!hasMigration.rows[0].exists) {
    logger.info('inserting initial migration row');
    const result = await client.query(
      "INSERT INTO migration VALUES (0, 'initial DDL')",
    );
    logger.silly('inserted initial migration', { result });
  }

  const hasCache = await client.query(
    'SELECT id FROM most_recent_lunch_pairing_cache WHERE id = 0',
  );
  logger.silly('ensuring an empty most recent lunch pairing cache exists', {
    result: hasCache,
  });
  if (hasCache.rowCount === 0) {
    // set minDate to wednesday 3 weeks ago
    const nextWednesday = getNextLunchDate();
    const minDate = subWeeks(nextWednesday, 3);
    const result = await client.query(
      'INSERT INTO most_recent_lunch_pairing_cache VALUES (0, $1)',
      [{ lut: {}, minDate }],
    );
    logger.silly('inserting empty initial cache', { result });
  }
}
